

type Object{
	name: String!
	content: String
	oneToOne: Object
	oneToMany: [Object]
	_id: String!
	createdAt: String
	updatedAt: String
}

type Query{
	objects(fieldFilter: FieldFilterInput,
	fieldRegexFilter: FieldFilterInput,
	sortByField: SortInput): [Object!]
	oneById(
		_id: String!
	): Object
}



type Mutation{
	create(
		object: Update!
	): String
	update(
		_id: String
		object: Update!
	): Boolean
	delete(
		_id: String
	): Boolean
}

input Create{
	name: String!
	content: String
	owner: String
}

input FieldFilterInput	{ 
    name: String
	content: String
	owner: String
	customFieldName: String
}


input SortInput {
  field: SortField!
  """
  True for ASC, false for DESC
  """
  order: Boolean
}

enum SortField {
  CREATED_AT
  UPDATED_AT
  NAME
  CUSTOM_FIELD_NAME
}


input Update{
	name: String
	content: String
	owner: String
}
schema{
	query: Query,
	mutation: Mutation
}